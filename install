#!/bin/bash

SCRIPT_PATH="$( cd "$(dirname "$0")" ; pwd -P )"
SCRIPT_PATH="$(realpath $SCRIPT_PATH)"

SUDO=sudo
if [ "${EUID}" ]; then
  [ ${EUID} -eq 0 ] && SUDO=
else
  uid=$(id -u)
  [ ${uid} -eq 0 ] && SUDO=
fi

install_borg() {
  # Releases:
  #   borg-freebsd64
  #   borg-linux64
  #   borg-macos64
  # Currently borgsync only supports macos and linux
  relname="linux64"
  platform=$(uname -s)
  [ "$platform" == "Darwin" ] && relname="macos64"
  API_URL="https://api.github.com/repos/borgbackup/borg/releases/latest"
  DL_URL=
  DL_URL=$(curl --silent ${AUTH_HEADER} "${API_URL}" \
    | jq --raw-output '.assets | .[]?.browser_download_url' \
    | grep "borg-${relname}$")

  [ "${DL_URL}" ] && {
    printf "\n\tInstalling Borg ..."
    wget --quiet -O /tmp/borg$$ "${DL_URL}"
    chmod 644 /tmp/borg$$
    [ -d /usr/local/bin ] || ${SUDO} mkdir -p /usr/local/bin
    ${SUDO} cp /tmp/borg$$ /usr/local/bin/borg
    ${SUDO} chown root:root /usr/local/bin/borg
    ${SUDO} chmod 755 /usr/local/bin/borg
    ${SUDO} ln -s /usr/local/bin/borg /usr/local/bin/borgfs
    rm -f /tmp/borg$$
    printf " done"
  }
}

install_vort() {
  printf "\n\tInstalling Vorta ..."
  have_pipx=$(type -p pipx)
  if [ "${have_pipx}" ]; then
    pipx ensurepath >/dev/null 2>&1
    pipx install pip >/dev/null 2>&1
    pipx install vorta >/dev/null 2>&1
  else
    python3 -m pip install vorta >/dev/null 2>&1
  fi
  [ -f ${SCRIPT_PATH}/share/vorta.desktop ] && {
    [ -d ${HOME}/.local ] || mkdir -p ${HOME}/.local
    [ -d ${HOME}/.local/share ] || mkdir -p ${HOME}/.local/share
    [ -d ${HOME}/.local/share/applications ] || {
      mkdir -p ${HOME}/.local/share/applications
    }
    cp ${SCRIPT_PATH}/share/vorta.desktop ${HOME}/.local/share/applications
    chmod 755 ${HOME}/.local/share/applications/vorta.desktop
  }
  printf " done"
}

if [ "${GH_TOKEN}" ]; then
  AUTH_HEADER="-H \"Authorization: Bearer ${GH_TOKEN}\""
else
  AUTH_HEADER=
fi

have_borg=$(type -p borg)
[ "${have_borg}" ] || install_borg
have_vort=$(type -p vorta)
[ "${have_vort}" ] || install_vort

${SUDO} cp ${SCRIPT_PATH}/bin/borgsync /usr/local/bin/borgsync
${SUDO} chown root:root /usr/local/bin/borgsync
${SUDO} chmod 755 /usr/local/bin/borgsync

[ -d /etc/borgsync ] || ${SUDO} mkdir -p /etc/borgsync
${SUDO} cp ${SCRIPT_PATH}/config.example /etc/borgsync
[ -f /etc/borgsync/config ] || {
  ${SUDO} cp /etc/borgsync/config.example /etc/borgsync/config
}
${SUDO} chmod 755 /etc/borgsync
${SUDO} chown root:root /etc/borgsync/config*
${SUDO} chmod 644 /etc/borgsync/config*

printf "\n\nInstallation of borgsync complete\n"
printf "\nCustomize the borgsync configuration file:"
printf "\n\t${SUDO} vi /etc/borgsync/config  # set your remote storage user/host, paths, etc\n"

printf "\nInitialize a Borg repository:"
printf "\n\tborgsync -b init\n"

printf "\nExport your Borg passphrase in the environment:"
printf "\n\texport BORG_PASSPHRASE='somelongphrase'\n"

printf "\nOptionally configure automated backups with systemd or cron"
printf "\nby following the instructions in the README\n"
